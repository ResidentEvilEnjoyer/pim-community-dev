{
    "openapi": "3.0.0",
    "info": {
        "title": "Official Akeneo PIM REST API Serenity",
        "description": "The Akeneo REST API brought to you!\\n\\nFind out how this Postman collection works by visiting https://api.akeneo.com",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "{protocol}://{sandboxName}",
            "description": "Your Sandbox",
            "variables": {
                "protocol": {
                    "enum": [
                        "http",
                        "https"
                    ],
                    "default": "https"
                },
                "sandboxName": {
                    "default": "your-sandbox.demo.cloud.akeneo.com"
                }
            }
        }
    ],
    "paths": {
        "/api/rest/v1/products": {
            "get": {
                "tags": [
                    "Product [identifier]"
                ],
                "summary": "Get list of products",
                "description": "This endpoint allows you to get a list of products. Products are paginated and they can be filtered. In the Enterprise Edition, since the 2.0, permissions based on your user groups are applied to the set of products you request.",
                "operationId": "get_products",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Filter products, for more details see the <a href=\\\"/documentation/filter.html\\\">Filters</a> section",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "description": "Filter product values to return scopable attributes for the given channel as well as the non localizable/non scopable attributes, for more details see the <a href=\\\"/documentation/filter.html#via-channel\\\">Filter product values via channel</a> section",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "e-commerce"
                        }
                    },
                    {
                        "name": "locales",
                        "in": "query",
                        "description": "Filter product values to return localizable attributes for the given locales as well as the non localizable/non scopable attributes, for more details see the <a href=\\\"/documentation/filter.html#via-locale\\\">Filter product values via locale</a> section",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return products paginated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "_links": {
                                            "$ref": "#/components/schemas/_links"
                                        },
                                        "current_page": {
                                            "description": "Current page number",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "_embedded": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Product"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "406": {
                        "$ref": "#/components/responses/406"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                },
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "_links": {
                "properties": {
                    "self": {
                        "properties": {
                            "href": {
                                "description": "URI of the current page of resources",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "first": {
                        "properties": {
                            "href": {
                                "description": "URI of the first page of resources",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "previous": {
                        "properties": {
                            "href": {
                                "description": "URI of the previous page of resources",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "new": {
                        "properties": {
                            "href": {
                                "description": "URI of the next page of resources",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Product": {
                "properties": {
                    "Name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "401": {
                "description": "Authentication required",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "The HTTP status code",
                                    "type": "integer",
                                    "example": 401
                                },
                                "message": {
                                    "description": "A message explaining the error",
                                    "type": "string",
                                    "example": "Authentication is required"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "x-details": "Can be caused by a missing or expired token."
            },
            "403": {
                "description": "Access forbidden",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "The HTTP status code",
                                    "type": "integer",
                                    "example": 403
                                },
                                "message": {
                                    "description": "A message explaining the error",
                                    "type": "string",
                                    "example": "Access forbidden. You are not allowed to list categories."
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "x-details": "The user does not have the permission to execute this request."
            },
            "406": {
                "description": "Not Acceptable",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "The HTTP status code",
                                    "type": "integer",
                                    "example": 406
                                },
                                "message": {
                                    "description": "A message explaining the error",
                                    "type": "string",
                                    "example": "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "x-details": "The `Accept` header is not `application/json` but it should."
            },
            "422": {
                "description": "Unprocessable entity",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "The HTTP status code",
                                    "type": "integer",
                                    "example": 422
                                },
                                "message": {
                                    "description": "A message explaining the error",
                                    "type": "string",
                                    "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "x-details": "The validation of the entity given in the body of the request failed"
            }
        },
        "securitySchemes": {
            "bearerToken": {
                "type": "http",
                "scheme": "bearer"
            },
            "basicToken": {
                "type": "http",
                "scheme": "basic"
            }
        }
    },
    "x-readme": {
        "samples-languages": [
            "curl",
            "php",
            "javascript",
            "node",
            "python",
            "java",
            "csharp"
        ]
    }
}