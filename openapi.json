{
    "openapi": "3.0.0",
    "info": {
        "title": "Official Akeneo PIM REST API Serenity",
        "description": "The Akeneo REST API brought to you!\\n\\nFind out how this Postman collection works by visiting https://api.akeneo.com",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "{protocol}://{sandboxName}",
            "description": "Your Sandbox",
            "variables": {
                "protocol": {
                    "enum": [
                        "http",
                        "https"
                    ],
                    "default": "https"
                },
                "sandboxName": {
                    "default": "your-sandbox.demo.cloud.akeneo.com"
                }
            }
        }
    ],
    "paths": {
        "/api/rest/v1/categories": {
            "patch": {
                "tags": [
                    "Category"
                ],
                "summary": "Update/create several categories.",
                "description": "This endpoint allows you to update several categories at once.",
                "operationId": "patch_categories",
                "requestBody": {
                    "description": "Contains several lines, each line is a category in JSON standard format",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Category_partial_update_list_request_body"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category_partial_update_list_response_body"
                                }
                            }
                        },
                        "x-details": "Returns a plain text response whose lines are JSON containing the status of each update or creation.",
                        "x-no-entity": true
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "413": {
                        "$ref": "#/components/responses/413"
                    },
                    "415": {
                        "$ref": "#/components/responses/415"
                    }
                }
            }
        },
        "/api/rest/v1/products": {
            "get": {
                "tags": [
                    "Product [identifier]"
                ],
                "summary": "Get list of products",
                "description": "This endpoint allows you to get a list of products. Products are paginated and they can be filtered. In the Enterprise Edition, since the 2.0, permissions based on your user groups are applied to the set of products you request.",
                "operationId": "get_products",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Filter products, for more details see the <a href=\\\"/documentation/filter.html\\\">Filters</a> section",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "examples": {
                            "test": {
                                "summary": "This filter will return all the products with a sku containing the value \"AKN\".",
                                "description": "test description",
                                "value": "{\"sku\":[{\"operator\":\"CONTAINS\",\"value\":\"AKN\"}]}",
                                "externalValue": "http://akeneo.com"
                            }
                        }
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "description": "Filter product values to return scopable attributes for the given channel as well as the non localizable/non scopable attributes, for more details see the <a href=\\\"/documentation/filter.html#via-channel\\\">Filter product values via channel</a> section",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "e-commerce"
                        }
                    },
                    {
                        "name": "locales",
                        "in": "query",
                        "description": "Filter product values to return localizable attributes for the given locales as well as the non localizable/non scopable attributes, for more details see the <a href=\\\"/documentation/filter.html#via-locale\\\">Filter product values via locale</a> section",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "en_US,fr_FR"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return products paginated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "_links": {
                                            "$ref": "#/components/schemas/_links"
                                        },
                                        "current_page": {
                                            "description": "Current page number",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "_embedded": {
                                            "$ref": "#/components/schemas/_embedded"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "406": {
                        "$ref": "#/components/responses/406"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                },
                "security": [
                    {
                        "bearerToken": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "_links": {
                "properties": {
                    "self": {
                        "properties": {
                            "href": {
                                "description": "URI of the current page of resources",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "first": {
                        "properties": {
                            "href": {
                                "description": "URI of the first page of resources",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "previous": {
                        "properties": {
                            "href": {
                                "description": "URI of the previous page of resources",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "next": {
                        "properties": {
                            "href": {
                                "description": "URI of the next page of resources",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "_embedded": {
                "properties": {
                    "items": {
                        "description": "The list of resources",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Product"
                        },
                        "example": [
                            {
                                "_links": {
                                    "self": {
                                        "href": "http://host/api/rest/v1/products/akeneo_tshirt"
                                    }
                                },
                                "identifier": "akeneo_tshirt",
                                "family": "tshirts",
                                "parent": null,
                                "groups": [],
                                "categories": [],
                                "enabled": true,
                                "values": {
                                    "name": [
                                        {
                                            "locale": null,
                                            "scope": null,
                                            "data": "Akeno T-Shirt"
                                        }
                                    ],
                                    "description": [
                                        {
                                            "locale": "en_US",
                                            "scope": null,
                                            "data": "A really nice t-shirt"
                                        }
                                    ],
                                    "price": [
                                        {
                                            "locale": null,
                                            "scope": "ecommerce",
                                            "data": {
                                                "amount": 10,
                                                "currency": "EUR"
                                            }
                                        }
                                    ]
                                },
                                "created": "2017-03-06T13:23:23+01:00",
                                "updated": "2017-03-06T13:23:23+01:00",
                                "associations": [],
                                "quantified_associations": [],
                                "metadata": {
                                    "id": 1,
                                    "form": "pim-product-edit-form"
                                }
                            },
                            {
                                "_links": {
                                    "self": {
                                        "href": "http://host/api/rest/v1/products/akeneo_pant"
                                    }
                                },
                                "identifier": "akeneo_pant",
                                "family": "tshirts",
                                "parent": null,
                                "groups": [],
                                "categories": [],
                                "enabled": true,
                                "values": {
                                    "name": [
                                        {
                                            "locale": null,
                                            "scope": null,
                                            "data": "Akeno Pant"
                                        }
                                    ],
                                    "description": [
                                        {
                                            "locale": "en_US",
                                            "scope": null,
                                            "data": "A really nice pant"
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "Category_partial_update_list_request_body": {
                "required": [
                    "code"
                ],
                "properties": {
                    "code": {
                        "description": "Category code",
                        "type": "string",
                        "example": "woman_coat",
                        "x-immutable": true
                    },
                    "parent": {
                        "description": "Category code of the parent's category.",
                        "type": "string",
                        "default": null,
                        "example": "winter_collection",
                        "x-validation-rules": "&bull; It is either equal to `null` or to an existing category code. &#10;&bull; If equal to an existing category code, it cannot reference itself."
                    },
                    "updated": {
                        "description": "Date of the last update",
                        "type": "string",
                        "format": "dateTime",
                        "example": "2021-05-22T12:48:00+02:00",
                        "x-read-only": true
                    },
                    "position": {
                        "description": "Position of the category in its level, start from 1 (only available since the 7.0 version and when query parameter \\\"with_position\\\" is set to \\\"true\\\")",
                        "type": "integer",
                        "example": 1,
                        "x-read-only": true
                    },
                    "labels": {
                        "description": "Category labels for each locale",
                        "properties": {
                            "localeCode": {
                                "description": "Category label for the locale `localeCode",
                                "type": "string",
                                "example": "en_US"
                            },
                            "Category label.": {
                                "description": "Category label for the locale `localeCode",
                                "type": "string",
                                "example": "Winter_collection"
                            }
                        },
                        "type": "object",
                        "default": [],
                        "x-validation-rules": "The `localeCode` is the code of an existing and activated locale"
                    }
                },
                "type": "object",
                "example": [
                    {
                        "code": "winter_collection",
                        "parent": null,
                        "updated": "2021-05-22T12:48:00+02:00",
                        "position": 1,
                        "labels": {
                            "en_US": "Winter collection",
                            "fr_FR": "Collection hiver"
                        }
                    }
                ]
            },
            "Category_partial_update_list_response_body": {
                "properties": {
                    "lines": {
                        "description": "Line number",
                        "type": "integer"
                    },
                    "identifier": {
                        "description": "Resource identifier, only filled when the resource is a product",
                        "type": "string"
                    },
                    "code": {
                        "description": "Resource code, only filled when the resource is not a product",
                        "type": "string"
                    },
                    "status_code": {
                        "description": "HTTP status code, see <a href=\\\"/documentation/responses.html#client-errors\\\">Client errors</a> to understand the meaning of each code",
                        "type": "integer"
                    },
                    "message": {
                        "description": "Message explaining the error",
                        "type": "string"
                    }
                },
                "type": "object",
                "example": [
                    {
                        "lines": 1,
                        "code": "winter_collection",
                        "status_code": 201
                    },
                    {
                        "lines": 2,
                        "code": "woman",
                        "status_code": 422,
                        "message": "Category \"spring_collection\" does not exist."
                    }
                ]
            },
            "Product": {
                "properties": {
                    "identifier": {
                        "type": "string"
                    },
                    "family": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "values": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/ProductValue"
                            }
                        }
                    },
                    "associations": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/ProductAssociation"
                            }
                        }
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "ProductValue": {
                "properties": {
                    "locale": {
                        "type": "string"
                    },
                    "scope": {
                        "type": "string"
                    },
                    "data": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ProductAssociation": {
                "properties": {
                    "association_type": {
                        "type": "string"
                    },
                    "products": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "product_models": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "401": {
                "description": "Authentication required",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "The HTTP status code",
                                    "type": "integer",
                                    "example": 401
                                },
                                "message": {
                                    "description": "A message explaining the error",
                                    "type": "string",
                                    "example": "Authentication is required"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "x-details": "Can be caused by a missing or expired token."
            },
            "403": {
                "description": "Access forbidden",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "The HTTP status code",
                                    "type": "integer",
                                    "example": 403
                                },
                                "message": {
                                    "description": "A message explaining the error",
                                    "type": "string",
                                    "example": "Access forbidden. You are not allowed to list categories."
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "x-details": "The user does not have the permission to execute this request."
            },
            "406": {
                "description": "Not Acceptable",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "The HTTP status code",
                                    "type": "integer",
                                    "example": 406
                                },
                                "message": {
                                    "description": "A message explaining the error",
                                    "type": "string",
                                    "example": "‘xxx’ in ‘Accept‘ header is not valid. Only ‘application/json‘ is allowed."
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "x-details": "The `Accept` header is not `application/json` but it should."
            },
            "413": {
                "description": "Request Entity Too Large",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "The HTTP status code",
                                    "type": "integer",
                                    "example": 413
                                },
                                "message": {
                                    "description": "A message explaining the error",
                                    "type": "string",
                                    "example": "Too many resources to process, 100 is the maximum allowed."
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "x-details": "There are too many resources to process (max 100) or the line of JSON is too long (max 1 000 000 characters)."
            },
            "415": {
                "description": "Unsupported Media type",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "The HTTP status code",
                                    "type": "integer",
                                    "example": 415
                                },
                                "message": {
                                    "description": "A message explaining the error",
                                    "type": "string",
                                    "example": "‘xxx’ in ‘Content-type’ header is not valid.  Only ‘application/vnd.akeneo.collection+json’ is allowed."
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "x-details": "The `Content-type` header has to be `application/vnd.akeneo.collection+json`."
            },
            "422": {
                "description": "Unprocessable entity",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "code": {
                                    "description": "The HTTP status code",
                                    "type": "integer",
                                    "example": 422
                                },
                                "message": {
                                    "description": "A message explaining the error",
                                    "type": "string",
                                    "example": "Property \"labels\" expects an array as data, \"NULL\" given. Check the API reference documentation."
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "x-details": "The validation of the entity given in the body of the request failed"
            }
        },
        "securitySchemes": {
            "bearerToken": {
                "type": "http",
                "scheme": "bearer"
            },
            "basicToken": {
                "type": "http",
                "scheme": "basic"
            }
        }
    },
    "x-readme": {
        "samples-languages": [
            "curl",
            "php",
            "javascript",
            "node",
            "python",
            "java",
            "csharp"
        ]
    }
}